// Buttons /////////////////////////////////////////////////////////

button,
input[type="reset"],
input[type="button"],
input[type="submit"],
input[type="image"],
.btn {
  .font-set(12, (@blh - (@buttonborderwidth * 2)));

  display: inline-block;
  max-width: 100%;
  padding: 0 (7em/8);
  margin: 0;

  border: @buttonborderwidth solid @buttonbordercolor;
  border-radius: @buttonroundness;

  background: @buttonbackground;
  transition: color 0.2s, border-color 0.2s, background-color 0.2s, opacity 0.2s;

  text-align: center;
  white-space: nowrap;
  vertical-align: top;
  cursor: pointer;

  &,
  &:visited,
  &:hover {
    color: contrast(@buttonbackground, @textcolor, @white);
  }

  &:focus,
  &:hover {
    outline: none;
    text-decoration: none;
    background-color: darken(@buttonbackground, 5%);
    border-color: darken(@buttonbackground, 5%);
  }

  & when (@buttondepth) {
    border-bottom-color: darken(@buttonbordercolor, 10%);

    &:focus,
    &:hover {
      border-color: darken(@buttonbackground, 5%);
      border-bottom-color: darken(@buttonbordercolor, 15%);
    }

    &:active {
      border-color: darken(@buttonbackground, 5%);
      border-top-color: darken(@buttonbordercolor, 15%);
    }
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.6;
  }
}

// Helpers ---------------------------------------------------------
.btn-reset() {
  font-size: inherit;
  display: inline;
  padding: 0;
  margin: 0;
  border: none;
  text-align: inherit;
  white-space: normal;
  vertical-align: inherit;
  background: inherit;
}

// Sizing ----------------------------------------------------------

.btn-small {
  .font-set(11, (@smallsize - (@buttonborderwidth * 2)));
}

.btn-base {
  .font-set(12, (@basesize - (@buttonborderwidth * 2)));
}

.btn-large {
  .font-set(14, (@largesize - (@buttonborderwidth * 2)));
}

.btn-xlarge {
  .font-set(16, (@xlargesize - (@buttonborderwidth * 2)));
}

.btn-xxlarge {
  .font-set(18, (@xxlargesize - (@buttonborderwidth * 2)));
}

.btn-size(@size) {
  .font-set(@size, (@size * 1.85));
}

// Colours ---------------------------------------------------------

// Typical Colours
.btn-primary { .btn-color(@basecolor);    }
.btn-comp    { .btn-color(@compcolor);    }
.btn-alert   { .btn-color(@alertcolor);   }
.btn-error   { .btn-color(@errorcolor);   }
.btn-info    { .btn-color(@infocolor);    }
.btn-success { .btn-color(@successcolor); }
.btn-warning { .btn-color(@warningcolor); }
.btn-inverse { .btn-color(@inversecolor); }

// Colour Builder
.btn-color(@thiscolor) {
  background-color: @thiscolor;
  border-color: @thiscolor;
  & when (@buttondepth) {
    border-bottom-color: darken(@thiscolor, 15%);
  }

  &,
  &:visited,
  &:hover {
    color: contrast(@thiscolor, darken(@thiscolor, 40%), @white, 60%);

    & when (luma(@thiscolor) < 60%) {
      text-shadow: 0 -1px 0 fadeout(#000, 90%);
    }
  }

  &:focus,
  &:hover {
    .colors() when (luma(@thiscolor) < 60%) {
      background-color: desaturate(darken(@thiscolor, 5%), 8%);
      border-color:     desaturate(darken(@thiscolor, 5%), 8%);
      & when (@controlsdepth) {
        border-bottom-color: darken(@thiscolor, 20%);
      }
    }
    .colors() when (luma(@thiscolor) > 60%) {
      background-color: desaturate(darken(@thiscolor, 5%), 5%);
      border-color:     desaturate(darken(@thiscolor, 5%), 5%);
      & when (@controlsdepth) {
        border-bottom-color: darken(@thiscolor, 20%);
      }
    }
    .colors();
  }

  &:active {
    .colors() when (luma(@thiscolor) < 60%) {
      background-color: desaturate(darken(@thiscolor, 5%), 8%);
      border-color:     desaturate(darken(@thiscolor, 5%), 8%);
      & when (@controlsdepth) {
        border-top-color: darken(@thiscolor, 20%);
      }
    }
    .colors() when (luma(@thiscolor) > 60%) {
      background-color: desaturate(darken(@thiscolor, 5%), 5%);
      border-color:     desaturate(darken(@thiscolor, 5%), 5%);
      & when (@controlsdepth) {
        border-top-color: darken(@thiscolor, 20%);
      }
    }
    .colors();
  }
}
